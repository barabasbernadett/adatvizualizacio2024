import streamlit as st
import numpy as np
import pandas as pd
import altair as alt
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

st.set_page_config(page_title='Hitelk√°rtya jogosults√°got meghat√°roz√≥ t√©nyez≈ëk', page_icon='üìä')
st.title('üìä Hitelk√°rtya jogosults√°got meghat√°roz√≥ t√©nyez≈ëk')

with st.expander('About this app'):
  st.markdown('**What can this app do?**')
  st.info('This app shows the use of Pandas for data wrangling, Altair for chart creation and editable dataframe for data interaction.')
  st.markdown('**How to use the app?**')
  st.warning('To engage with the app, 1. Select genres of your interest in the drop-down selection box and then 2. Select the year duration from the slider widget. As a result, this should generate an updated editable DataFrame and line plot.')
  
st.subheader('Adatok')
df = pd.read_csv('dataset/creditcard_eligibility_dataset.csv')
st.write(df)

st.subheader('Bevezet≈ë')
st.markdown('A projekt c√©lja a hitelk√°rtya-jogosults√°gi adatb√°zis r√©szletes elemz√©se, amely megvil√°g√≠tja, hogy mely t√©nyez≈ëk befoly√°solj√°k az egy√©n hitelk√°rtya-ig√©nyl√©s√©nek sikeress√©g√©t. Az elemz√©s c√©lja, hogy meg√©rts√ºk a hitelk√©pess√©get befoly√°sol√≥ k√ºl√∂nb√∂z≈ë demogr√°fiai, p√©nz√ºgyi √©s szem√©lyes t√©nyez≈ëket, √©s ezek alapj√°n fejlessz√ºnk ki jobb hitelb√≠r√°lati strat√©gi√°kat √©s c√©lzott marketingkamp√°nyokat.')
st.markdown('Az elemz√©shez haszn√°lt adatok egy √°tfog√≥ hitelk√°rtya-jogosults√°gi adatb√°zisb√≥l sz√°rmaznak, amely tartalmazza az egyes ig√©nyl≈ëk demogr√°fiai jellemz≈ëit (p√©ld√°ul kor, nem), p√©nz√ºgyi mutat√≥it (p√©ld√°ul j√∂vedelem, foglalkoztat√°si id≈ë), valamint szem√©lyes adatokat (p√©ld√°ul csal√°di √°llapot, lakhat√°si k√∂r√ºlm√©nyek). Az adatok t√∂bb mint 1000 egy√©nr≈ël gy≈±jt√∂tt inform√°ci√≥kat tartalmaznak, √©s v√°ltoz√≥kat tartalmaznak, mint p√©ld√°ul: ID, Kor, nem , v√©gzetts√©g, csal√°di √°llapot, lakhat√°si t√≠pus, hitelk√©pess√©g.')     

st.subheader('Demogr√°fiai v√°ltozok')

# Create histogram for Age Distribution
age_hist = alt.Chart(df).mark_bar().encode(
    x=alt.X('Age:Q', bin=True, title='Age'),
    y='count()',
).properties(
    title='Egy√©nek √©letkor szerinti eloszl√°sa',
    width=600,
    height=400
).interactive()

# Display Age Distribution Histogram
st.altair_chart(age_hist, use_container_width=True)

st.markdown('A koroszt√°ly szerinti eloszl√°s elemz√©se lehet≈ëv√© teszi, hogy azonos√≠tsuk azokat a korcsoportokat, amelyek domin√°lnak a hitelig√©nyl≈ëk k√∂z√∂tt √©s legink√°bb √©rdekl≈ëdnek a hitelk√°rty√°k ir√©nyl√©s√©re √©s seg√≠t abban, hogy felismerj√ºk, mely koroszt√°lyok kev√©sb√© k√©pviselt√©k magukat a hitelpiacon.')


# Displaying gender distribution using a count bar chart
st.header('Egy√©nek nem szerinti eloszl√°sa')
gender_chart = alt.Chart(df).mark_bar().encode(
    alt.X('Gender:N', title='Gender'),
    alt.Y('count()', title='Number of Applicants'),
    tooltip=['Gender:N', 'count()']
).properties(
    title='Gender Distribution',
    width=700,
    height=400
).interactive()
st.altair_chart(gender_chart, use_container_width=True)

st.markdown('Hitelk√°rtya jogosults√°gi szempontb√≥l a nemek eloszl√°s√°nak szeml√©ltet√©se az elemz√©sben seg√≠ts√©get ny√∫jt abban, hogy megl√°ssuk, mely nemek k√©pvisel≈ëi jelentkeznek gyakrabban hitelk√°rty√°k√©rt. Ez a tud√°s lehet≈ëv√© teszi a p√©nzint√©zetek sz√°m√°ra, hogy jobban meg√©rts√©k √©s c√©lzottabban alak√≠ts√°k ki a hitelk√°rtya aj√°nlataikat √©s marketing strat√©gi√°ikat, figyelembe v√©ve a nemek k√∂z√∂tti p√©nz√ºgyi szok√°sok √©s ig√©nyek k√ºl√∂nbs√©geit.')
  
# # Csoportos oszlopdiagram l√©trehoz√°sa
# fig = plt.figure(figsize=(10, 8))
# ax = fig.add_subplot(111, projection='3d')

# for (family_status, years_employed), group in df.groupby(['Family_status', 'Years_employed']):
#     approval_counts = group['Target'].value_counts(normalize=True).sort_index()
#     approval_counts.plot(kind='bar', color=['green', 'red'], alpha=0.7, ax=ax, label=f"{family_status}, {years_employed} years")

# ax.set_xlabel('Family Status')
# ax.set_ylabel('Years Employed')
# ax.set_zlabel('Credit Approval')

# plt.legend()
# plt.title('Relationship between Family Status, Years Employed, Housing Type and Credit Approval')
# plt.tight_layout()

# plt.show()

st.subheader('A v√°ltozok k√∂z√∂tti kapcsolatok tanulm√°nyoz√°sa')

# kodreszlet 2
import plotly.graph_objects as go

# H√°rom dimenzi√≥: Csal√°di √°llapot, √âvek a foglalkoz√°sban, Lak√≥hely t√≠pusa
csaladi_allapot = df['Family_status'].unique()
evek_foglalkozasban = df['Years_employed'].unique()
lakohely_tipus = df['Housing_type'].unique()

# Hitelk√©pess√©g sz√≠nez√©s szerint
df['Color'] = df['Target'].replace({0: 'red', 1: 'green'})

# 3D Surface Plot l√©trehoz√°sa
fig = go.Figure(data=[go.Surface(
    x=df['Family_status'],
    y=df['Years_employed'],
    z=df['Housing_type'],
    colorscale='Viridis',  # Sz√≠nsk√°la be√°ll√≠t√°sa
    colorbar=dict(title='Hitelk√©pess√©g'),
)])

# Grafikon be√°ll√≠t√°sai
fig.update_layout(
    title='Csal√°di √°llapot, √âvek a foglalkoz√°sban √©s Lak√≥hely t√≠pusa k√∂z√∂tti √∂sszef√ºgg√©sek hitelk√©pess√©ggel',
    scene=dict(
        xaxis_title='Csal√°di √°llapot',
        yaxis_title='√âvek a foglalkoz√°sban',
        zaxis_title='Lak√≥hely t√≠pusa',
    )
)
st.plotly_chart(fig)

chart = alt.Chart()

st.markdown('A csal√°di √°llapot,foglalkoz√°s √©s lak√≥hely t√≠pusa k√∂z√∂tti √∂sszef√ºgg√©seket a hitelk√©pess√©ggel kapcsolatban a h√°romdimenzi√≥s fel√ºleti diagram szeml√©ltet. Az eredm√©nyek alapj√°n meg√°llap√≠thatjuk, hogy p√©ld√°ul h√°zas csal√°dos emberek eset√©ben gyakran jobb a hitelk√©pess√©g, m√≠g egyed√ºl√°ll√≥k vagy √©lett√°rsakkal √©l≈ëk k√∂r√©ben ez elt√©rhet. Emellett a hosszabb munkaviszony gyakran kedvez≈ë hat√°ssal van a hitelk√©pess√©gre, m√≠g a r√∂videbb foglalkoztat√°si id≈ëszakok eset√©n magasabb lehet a kock√°zat. A lak√≥hely t√≠pusa (p√©ld√°ul v√°rosi vagy vid√©ki) szint√©n jelent≈ës t√©nyez≈ë lehet: a nagyv√°rosokban √©l≈ëk eset√©ben esetlegesen jobb a hitelk√©pess√©g, mivel magasabb j√∂vedelmi szint √©s stabilit√°s tapasztalhat√≥.')


# kodreszlet 3
import plotly.express as px
import streamlit as st

# Sz√≠nez√©shez a hitelk√©pess√©g √°tnevez√©se
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# 1. Vizualiz√°ci√≥: Csal√°di √°llapot, √âvek a foglalkoz√°sban √©s Lak√≥hely t√≠pusa
fig1 = px.scatter_3d(df, 
                     x='Family_status', 
                     y='Years_employed', 
                     z='Housing_type', 
                     color='Hitelk√©pess√©g',
                     title='Csal√°di √°llapot, √âvek a foglalkoz√°sban √©s Lak√≥hely t√≠pusa k√∂z√∂tti √∂sszef√ºgg√©sek hitelk√©pess√©ggel',
                     labels={
                         'Family_status': 'Csal√°di √°llapot',
                         'Years_employed': '√âvek a foglalkoz√°sban',
                         'Housing_type': 'Lak√≥hely t√≠pusa',
                         'Hitelk√©pess√©g': 'Hitelk√©pess√©g'
                     },
                     color_discrete_map={'J√≥v√°hagyott': 'green', 'Elutas√≠tott': 'red'}
                    )

st.plotly_chart(fig1)
st.markdown('A vizualiz√°ci√≥ szeml√©lteti, hogyan befoly√°solj√°k a csal√°di √°llapot, √©vek a  foglalkoz√°sban √©s lak√≥hely t√≠pusa a hitelk√©pess√©get, k√ºl√∂n kiemelve a j√≥v√°hagyott √©s elutas√≠tott hitelk√©pess√©geket.A vizualiz√°ci√≥k alapj√°n sz√°mos fontos k√∂vetkeztet√©st vonhatunk le a csal√°di √°llapot, √©vek a foglalkoz√°sban √©s lak√≥hely t√≠pusa k√∂z√∂tti √∂sszef√ºgg√©sekr≈ël a hitelk√©pess√©ggel kapcsolatban. El≈ësz√∂r is, l√°that√≥, hogy bizonyos csal√°di √°llapotok √©s hossz√∫ t√°v√∫ munkatapasztalat jobb hitelk√©pess√©get eredm√©nyezhetnek, m√≠g m√°sokn√°l ez gyeng√©bb lehet. Ez arra utal, hogy ezek a t√°rsadalmi-gazdas√°gi t√©nyez≈ëk meghat√°roz√≥ szerepet j√°tszanak az egy√©nek p√©nz√ºgyi stabilit√°s√°ban √©s hitelmin≈ës√≠t√©s√©ben. Az √∂sszef√ºgg√©sek tanulm√°nyoz√°sa lehet≈ëv√© teszi a p√©nz√ºgyi szolg√°ltat√≥k sz√°m√°ra, hogy m√©lyebben meg√©rts√©k, milyen t√°rsadalmi-gazdas√°gi t√©nyez≈ëk j√°tszanak szerepet az egy√©nek p√©nz√ºgyi stabilit√°s√°ban √©s hitelk√©pess√©g√©ben.')

# 2. Vizualiz√°ci√≥: J√∂vedelem, V√©gzetts√©g √©s √âvek a foglalkoz√°sban
fig2 = px.scatter_3d(df, 
                     x='Total_income', 
                     y='Education_type', 
                     z='Years_employed', 
                     color='Hitelk√©pess√©g',
                     title='J√∂vedelem, V√©gzetts√©g √©s √âvek a foglalkoz√°sban k√∂z√∂tti √∂sszef√ºgg√©sek hitelk√©pess√©ggel',
                     labels={
                         'Total_income': 'J√∂vedelem',
                         'Education_type': 'V√©gzetts√©g',
                         'Years_employed': '√âvek a foglalkoz√°sban',
                         'Hitelk√©pess√©g': 'Hitelk√©pess√©g'
                     },
                     color_discrete_map={'J√≥v√°hagyott': 'green', 'Elutas√≠tott': 'red'}
                    )


st.markdown('A m√°sodik vizualiz√°ci√≥ f√≥kusz√°ban a j√∂vedelem, v√©gzetts√©g √©s √©vek a foglalkoz√°sban szerepelnek, √©s ezek kapcs√°n mutatja be, hogyan hat√°rozz√°k meg ezek a t√©nyez≈ëk az egy√©n hitelk√©pess√©g√©t. Azok az egy√©nek, akik magasabb j√∂vedelemmel rendelkeznek √©s jobb v√©gzetts√©ggel b√≠rnak stabilabb hitelk√©pess√©ggel rendelkeznek. Ez annak tudhat√≥ be, hogy ezek az emberek k√©pesek hat√©konyan kezelni p√©nz√ºgyi k√∂telezetts√©geiket √©s hossz√∫ t√°v√∫ p√©nz√ºgyi stabilit√°st biztos√≠tani sz√°mukra.')
# Streamlit oldalon val√≥ megjelen√≠t√©s
st.plotly_chart(fig1)
st.plotly_chart(fig2)



#kodreszlet4
import pandas as pd
import plotly.express as px
import streamlit as st

# Hitelk√©pess√©g megjel√∂l√©se
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# Streamlit c√≠m
st.title("J√∂vedelem t√≠pus √©s v√©gzetts√©g √∂sszef√ºgg√©se hitelk√©pess√©g alapj√°n")

# Grouped Bar Chart l√©trehoz√°sa
fig = px.bar(
    df,
    x='Income_type',
    y='ID',  # Sz√°molja meg az egy√©neket
    color='Hitelk√©pess√©g',
    barmode='group',
    facet_col='Education_type',
    labels={'ID': 'Egy√©nek sz√°ma', 'Income_type': 'J√∂vedelem t√≠pus', 'Education_type': 'V√©gzetts√©g'},
    title='J√∂vedelem t√≠pus √©s v√©gzetts√©g √∂sszef√ºgg√©se hitelk√©pess√©g alapj√°n'
)

# Diagram megjelen√≠t√©se
st.plotly_chart(fig)

st.markdown('Az √°bra azt mutatja, hogyan f√ºgg √∂ssze a j√∂vedelem t√≠pusa √©s a v√©gzetts√©g a hitelk√©pess√©ggel. A diagram csoportos oszlopdiagram form√°j√°ban √°br√°zolja, hogy az egyes j√∂vedelem t√≠pusok √©s v√©gzetts√©gek szerint h√°ny egy√©nt jel√∂ltek meg hitelk√©pess√©gi st√°tusszal. A sz√≠nek k√ºl√∂nbs√©ge azt jelzi, hogy az egy√©nek mennyire lettek j√≥v√°hagyva vagy elutas√≠tva hitelk√©relm√ºkkel.A vizualiz√°ci√≥b√≥l l√°that√≥, hogy bizonyos j√∂vedelem t√≠pusok √©s v√©gzetts√©gek eset√©n magasabb a j√≥v√°hagyott hitelk√©pess√©gi ar√°ny, m√≠g m√°s esetekben alacsonyabb. A magasabb v√©gzetts√©ggel rendelkez≈ëk √©s bizonyos j√∂vedelem t√≠pusok eset√©n nagyobb es√©llyel j√≥v√°hagyott a hitelk√©relem.')
        
#pleda5 
import pandas as pd
import plotly.express as px
import streamlit as st


# Hitelk√©pess√©g megjel√∂l√©se
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# Streamlit c√≠m
st.title("J√∂vedelem t√≠pus √©s v√©gzetts√©g √∂sszef√ºgg√©se hitelk√©pess√©g alapj√°n")

# Grouped Bar Chart l√©trehoz√°sa
fig = px.bar(
    df,
    x='Income_type',
    y='ID',  # Sz√°molja meg az egy√©neket
    color='Hitelk√©pess√©g',
    barmode='group',
    facet_col='Education_type',
    #labels={'ID': 'Egy√©nek sz√°ma', 'Income_type': 'J√∂vedelem t√≠pus', 'Education_type': 'V√©gzetts√©g'},
    #title='J√∂vedelem t√≠pus √©s v√©gzetts√©g √∂sszef√ºgg√©se hitelk√©pess√©g alapj√°n'
)

# Diagram megjelen√≠t√©se
st.plotly_chart(fig)

#6
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# Streamlit c√≠m
st.title("V√©gzetts√©g √©s hitelk√©pess√©g √∂sszef√ºgg√©se")

# Grouped Bar Chart l√©trehoz√°sa
fig = px.bar(
    df,
    x='Education_type',
    y='ID',  # Sz√°molja meg az egy√©neket
    color='Hitelk√©pess√©g',
    barmode='group',
    labels={'ID': 'Egy√©nek sz√°ma', 'Education_type': 'V√©gzetts√©g'},
    #title='V√©gzetts√©g √©s hitelk√©pess√©g √∂sszef√ºgg√©se'
)

# Diagram megjelen√≠t√©se
st.plotly_chart(fig)

#5.2
# Hitelk√©pess√©g megjel√∂l√©se
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# Streamlit c√≠m
st.title("J√∂vedelem t√≠pus √©s hitelk√©pess√©g √∂sszef√ºgg√©se")

# Grouped Bar Chart l√©trehoz√°sa
fig = px.bar(
    df,
    x='Income_type',
    y='ID',  # Sz√°molja meg az egy√©neket
    color='Hitelk√©pess√©g',
    barmode='group',
    labels={'ID': 'Egy√©nek sz√°ma', 'Income_type': 'J√∂vedelem t√≠pus'},
    title='J√∂vedelem t√≠pus √©s hitelk√©pess√©g √∂sszef√ºgg√©se'
)

# Diagram megjelen√≠t√©se
st.plotly_chart(fig)

#7
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# Streamlit c√≠m
st.title("Kor √©s j√∂vedelem hat√°sa hitelk√©pess√©gre")

# Heatmap l√©trehoz√°sa
fig = px.density_heatmap(
    df,
    x='Age',
    y='Total_income',
    z='Hitelk√©pess√©g',
    color_continuous_scale='Viridis',
    labels={'Age': 'Kor', 'Total_income': 'J√∂vedelem', 'Hitelk√©pess√©g': 'Hitelk√©pess√©g'},
    title='Kor √©s j√∂vedelem hat√°sa hitelk√©pess√©gre'
)

# Diagram megjelen√≠t√©se
st.plotly_chart(fig)

#kodreszlet3
import pandas as pd
import plotly.express as px
import streamlit as st

# Hitelk√©pess√©g megjel√∂l√©se
df['Hitelk√©pess√©g'] = df['Target'].replace({0: 'Elutas√≠tott', 1: 'J√≥v√°hagyott'})

# Streamlit c√≠m
st.title("J√∂vedelem t√≠pus √©s v√©gzetts√©g √∂sszef√ºgg√©se hitelk√©pess√©g alapj√°n")

# Grouped Bar Chart l√©trehoz√°sa
fig = px.bar(
    df,
    x='Income_type',
    y='ID',  # Sz√°molja meg az egy√©neket
    color='Hitelk√©pess√©g',
    barmode='group',
    facet_col='Education_type',
    labels={'ID': 'Egy√©nek sz√°ma', 'Income_type': 'J√∂vedelem t√≠pus', 'Education_type': 'V√©gzetts√©g'},
    title='J√∂vedelem t√≠pus √©s v√©gzetts√©g √∂sszef√ºgg√©se hitelk√©pess√©g alapj√°n'
)

# Diagram megjelen√≠t√©se
st.plotly_chart(fig)